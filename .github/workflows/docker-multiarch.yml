# name: Build and Push Multi-Arch "poorman-aws-playground" Docker Image

# on:
#   push:
#     branches:
#       - main  # Only trigger on push to main

#   pull_request:
#     types:
#       - opened
#       - synchronize
#       - reopened
#       - closed
#     branches:
#       - '**'  # All PRs allowed from any branch

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3

#       - name: Set up QEMU (for ARM64 emulation)
#         uses: docker/setup-qemu-action@v2

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2

#       - name: Set repository variable
#         run: echo "REPO=lesposito87/poorman-aws-playground" >> $GITHUB_ENV

#       - name: Log in to Docker Hub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}

#       - name: Determine tag and build condition
#         id: determine_tag
#         run: |
#           if [[ "${{ github.event_name }}" == "pull_request" && "${{ github.event.action }}" != "closed" ]]; then
#             TAG="pr-${{ github.event.pull_request.number }}"
#             echo "TAGS=$REPO:$TAG" >> $GITHUB_ENV
#             echo "BUILD_IMAGE=true" >> $GITHUB_ENV

#           elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
#             # Extract PR number from merge commit message (e.g. "Merge pull request #123 from branch")
#             PR_NUMBER=$(git log -1 --pretty=%B | grep -oE '#[0-9]+' | tr -d '#')

#             # Remove PR image tag if PR number was found
#             if [[ -n "$PR_NUMBER" ]]; then
#               PR_TAG="pr-$PR_NUMBER"
#               echo "Removing PR image tag $REPO:$PR_TAG from Docker Hub"
#               curl -X DELETE "https://hub.docker.com/v2/repositories/$REPO/tags/${PR_TAG}/" \
#                 -H "Authorization: Bearer ${{ secrets.DOCKERHUB_TOKEN }}"
#             fi

#             # Determine new version tag
#             LATEST_TAG=$(curl -s "https://hub.docker.com/v2/repositories/$REPO/tags/?page_size=100" | jq -r '.results[] | select(.name | test("^[0-9]+\\.[0-9]+\\.[0-9]+$")) | .name' | sort -V | tail -n 1)
#             [[ "$LATEST_TAG" == "null" || -z "$LATEST_TAG" ]] && LATEST_TAG="1.0.0"
#             MAJOR=$(echo "$LATEST_TAG" | cut -d. -f1)
#             MINOR=$(echo "$LATEST_TAG" | cut -d. -f2)
#             PATCH=$(echo "$LATEST_TAG" | cut -d. -f3)
#             NEW_TAG="$MAJOR.$MINOR.$((PATCH + 1))"
#             echo "TAGS=$REPO:$NEW_TAG,$REPO:latest" >> $GITHUB_ENV
#             echo "BUILD_IMAGE=true" >> $GITHUB_ENV

#           else
#             echo "BUILD_IMAGE=false" >> $GITHUB_ENV
#           fi

#       # - name: Build and push multi-arch image
#       #   if: env.BUILD_IMAGE == 'true'
#       #   uses: docker/build-push-action@v5
#       #   with:
#       #     context: .
#       #     file: ./Dockerfile
#       #     push: true
#       #     tags: ${{ env.TAGS }}
#       #     platforms: linux/amd64,linux/arm64

#       - name: Build and push multi-arch image
#         if: env.BUILD_IMAGE == 'true'
#         run: |
#           echo ${{ env.TAGS }}

#       - name: Remove PR image tag on PR close (if not merged)
#         if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == false
#         run: |
#           REPO=lesposito87/poorman-aws-playground
#           TAG="pr-${{ github.event.pull_request.number }}"
#           echo "Removing PR image tag $REPO:$TAG from Docker Hub"
#           curl -X DELETE "https://hub.docker.com/v2/repositories/$REPO/tags/${TAG}/" \
#             -H "Authorization: Bearer ${{ secrets.DOCKERHUB_TOKEN }}"





# name: Build and Push Multi-Arch "poorman-aws-playground" Docker Image

# on:
#   push:
#     branches:
#       - main

#   pull_request:
#     types:
#       - opened
#       - synchronize
#       - reopened
#       - closed
#     branches:
#       - '**'

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3

#       - name: Set up QEMU (for ARM64 emulation)
#         uses: docker/setup-qemu-action@v2

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2

#       - name: Set repository variable
#         run: echo "REPO=lesposito87/poorman-aws-playground" >> $GITHUB_ENV

#       - name: Log in to Docker Hub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}

#       - name: Determine tag and build condition
#         if: github.event_name != 'pull_request' || github.event.action != 'closed'
#         id: determine_tag
#         run: |
#           if [[ "${{ github.event_name }}" == "pull_request" ]]; then
#             TAG="pr-${{ github.event.pull_request.number }}"
#             echo "TAGS=$REPO:$TAG" >> $GITHUB_ENV
#             echo "BUILD_IMAGE=true" >> $GITHUB_ENV

#           elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
#             PR_NUMBER=$(git log -1 --pretty=%B | grep -oE '#[0-9]+' | tr -d '#')

#             if [[ -n "$PR_NUMBER" ]]; then
#               echo "PR_TAG=pr-$PR_NUMBER" >> $GITHUB_ENV
#             fi

#             LATEST_TAG=$(curl -s "https://hub.docker.com/v2/repositories/$REPO/tags/?page_size=100" | jq -r '.results[] | select(.name | test("^[0-9]+\\.[0-9]+\\.[0-9]+$")) | .name' | sort -V | tail -n 1)
#             [[ "$LATEST_TAG" == "null" || -z "$LATEST_TAG" ]] && LATEST_TAG="1.0.0"
#             MAJOR=$(echo "$LATEST_TAG" | cut -d. -f1)
#             MINOR=$(echo "$LATEST_TAG" | cut -d. -f2)
#             PATCH=$(echo "$LATEST_TAG" | cut -d. -f3)
#             NEW_TAG="$MAJOR.$MINOR.$((PATCH + 1))"
#             echo "TAGS=$REPO:$NEW_TAG,$REPO:latest" >> $GITHUB_ENV
#             echo "BUILD_IMAGE=true" >> $GITHUB_ENV

#           else
#             echo "BUILD_IMAGE=false" >> $GITHUB_ENV
#           fi

#       # - name: Build and push multi-arch image
#       #   if: env.BUILD_IMAGE == 'true'
#       #   uses: docker/build-push-action@v5
#       #   with:
#       #     context: .
#       #     file: ./Dockerfile
#       #     push: true
#       #     tags: ${{ env.TAGS }}
#       #     platforms: linux/amd64,linux/arm64

#       - name: Build and push multi-arch image
#         if: env.BUILD_IMAGE == 'true'
#         run: |
#           echo ${{ env.TAGS }}

#       - name: Remove PR image tag on PR close or after merge to main
#         if: >
#           (github.event_name == 'pull_request' && github.event.action == 'closed') ||
#           (github.ref == 'refs/heads/main' && env.PR_TAG != '')
#         run: |
#           REPO=lesposito87/poorman-aws-playground
#           TAG="pr-${{ github.event.pull_request.number }}"
#           if [[ "${{ github.event_name }}" == "push" ]]; then
#             TAG="${{ env.PR_TAG }}"
#           fi

#           if [[ -n "$TAG" ]]; then
#             echo "Removing PR image tag $REPO:$TAG from Docker Hub"
#             curl -X DELETE "https://hub.docker.com/v2/repositories/$REPO/tags/${TAG}/" \
#               -H "Authorization: Bearer ${{ secrets.DOCKERHUB_TOKEN }}"
#           fi

name: Build and Push Multi-Arch "poorman-aws-playground" Docker Image

on:
  push:
    branches:
      - main

  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - closed
    branches:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU (for ARM64 emulation)
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set repository variable
        run: echo "REPO=lesposito87/poorman-aws-playground" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Determine tag and build condition
        if: github.event_name != 'pull_request' || github.event.action != 'closed'
        id: determine_tag
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            TAG="pr-${{ github.event.pull_request.number }}"
            echo "TAGS=$REPO:$TAG" >> $GITHUB_ENV
            echo "BUILD_IMAGE=true" >> $GITHUB_ENV

          elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            PR_NUMBER=$(git log -1 --pretty=%B | grep -oE '#[0-9]+' | tr -d '#')

            if [[ -n "$PR_NUMBER" ]]; then
              echo "PR_TAG=pr-$PR_NUMBER" >> $GITHUB_ENV
            fi

            LATEST_TAG=$(curl -s "https://hub.docker.com/v2/repositories/$REPO/tags/?page_size=100" | jq -r '.results[] | select(.name | test("^[0-9]+\\.[0-9]+\\.[0-9]+$")) | .name' | sort -V | tail -n 1)
            [[ "$LATEST_TAG" == "null" || -z "$LATEST_TAG" ]] && LATEST_TAG="1.0.0"
            MAJOR=$(echo "$LATEST_TAG" | cut -d. -f1)
            MINOR=$(echo "$LATEST_TAG" | cut -d. -f2)
            PATCH=$(echo "$LATEST_TAG" | cut -d. -f3)
            NEW_TAG="$MAJOR.$MINOR.$((PATCH + 1))"
            echo "TAGS=$REPO:$NEW_TAG,$REPO:latest" >> $GITHUB_ENV
            echo "BUILD_IMAGE=true" >> $GITHUB_ENV

          else
            echo "BUILD_IMAGE=false" >> $GITHUB_ENV
          fi

      - name: Build and push multi-arch image
        if: env.BUILD_IMAGE == 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.TAGS }}
          platforms: linux/amd64,linux/arm64

      - name: Remove PR image tag on PR close
        if: github.event_name == 'pull_request' && github.event.action == 'closed'
        run: |
          REPO=lesposito87/poorman-aws-playground
          TAG="pr-${{ github.event.pull_request.number }}"
          echo "Removing PR image tag $REPO:$TAG from Docker Hub"
          curl -X DELETE "https://hub.docker.com/v2/repositories/$REPO/tags/${TAG}/" \
            -H "Authorization: Bearer ${{ secrets.DOCKERHUB_TOKEN }}"
