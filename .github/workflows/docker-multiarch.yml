name: Build and Push Multi-Arch "poorman-aws-playground" Docker Image

on:
  push:
    branches:
      - main

  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU (for ARM64 emulation)
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set repository variable
        run: echo "REPO=lesposito87/poorman-aws-playground" >> $GITHUB_ENV

      - name: Validate Dockerfile
        run: |
          echo "Validating Dockerfile..."
          docker build --no-cache -f Dockerfile .

      - name: Define Docker tags
        id: tag
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            TAG=pr-${{ github.event.pull_request.number }}
            echo "TAGS=$REPO:$TAG" >> $GITHUB_ENV
          else
            # Get the latest semver tag from Docker Hub
            LATEST_TAG=$(curl -s "https://hub.docker.com/v2/repositories/$REPO/tags/?page_size=100" | jq -r '.results[] | select(.name | test("^[0-9]+\\.[0-9]+\\.[0-9]+$")) | .name' | sort -V | tail -n 1)
            if [[ "$LATEST_TAG" == "null" || -z "$LATEST_TAG" ]]; then
              LATEST_TAG="0.0.0"
            fi
            MAJOR=$(echo "$LATEST_TAG" | cut -d. -f1)
            MINOR=$(echo "$LATEST_TAG" | cut -d. -f2)
            PATCH=$(echo "$LATEST_TAG" | cut -d. -f3)
            NEW_TAG="$MAJOR.$MINOR.$((PATCH + 1))"
            echo "TAGS=$REPO:$NEW_TAG,$REPO:latest" >> $GITHUB_ENV
            echo "PR_TAG=pr-${{ github.event.pull_request.number }}" >> $GITHUB_ENV
          fi

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push multi-arch image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.TAGS }}
          platforms: linux/amd64,linux/arm64

      - name: Delete PR image after merge
        if: github.ref == 'refs/heads/main'
        run: |
          if [[ -n "${{ env.PR_TAG }}" ]]; then
            echo "Removing PR image tag $REPO:${{ env.PR_TAG }}"
            curl -X DELETE "https://hub.docker.com/v2/repositories/$REPO/tags/${{ env.PR_TAG }}/" \
              -H "Authorization: Bearer ${{ secrets.DOCKERHUB_TOKEN }}"
          fi
